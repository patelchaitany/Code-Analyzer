name: Code Quality Check

on:
  pull_request:
    branches: [ main, master ]
  push:
    branches: [ main, master ]

jobs:
  analyze:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run code quality analysis on changed files
      id: code-quality
      run: |
        # Get list of changed files
        CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -E '\.(py|js|jsx)$' || echo "")
        
        if [ -z "$CHANGED_FILES" ]; then
          echo "No Python or JavaScript files changed."
          echo "::set-output name=result::No Python or JavaScript files changed in this commit."
          exit 0
        fi
        
        # Initialize result
        RESULT=""
        
        # Analyze each changed file
        for FILE in $CHANGED_FILES; do
          if [ -f "$FILE" ]; then
            echo "Analyzing file: $FILE"
            # Run FastAPI analyzer
            ANALYSIS=$(python -c "
import sys
sys.path.append('.')
from backend.main import analyze_python_code, analyze_js_code
import json

with open('$FILE', 'r') as f:
    content = f.read()
    
if '$FILE'.endswith('.py'):
    result = analyze_python_code(content)
else:
    result = analyze_js_code(content)
    
print(json.dumps(result, indent=2))
")
            
            # Append to results
            RESULT="$RESULT\n\n## File: $FILE\n\`\`\`json\n$ANALYSIS\n\`\`\`"
          fi
        done
        
        # Set output for comment step
        echo "::set-output name=result::$RESULT"
      
    - name: Comment PR with analysis results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `# Code Quality Analysis Results
          
          ${{ steps.code-quality.outputs.result }}
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
          
    - name: Log results on push
      if: github.event_name == 'push'
      run: |
        echo "# Code Quality Analysis Results"
        echo "${{ steps.code-quality.outputs.result }}" 